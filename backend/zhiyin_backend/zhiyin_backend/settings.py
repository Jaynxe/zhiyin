"""
Django settings for zhiyin_backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-_)fbso*slku^exa8#57@+vi#p9-rch1@^+s)o^dx6p&%ofw#d&"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# 配置自定义的异常处理器
REST_FRAMEWORK = {
    "EXCEPTION_HANDLER": "myapp.utils.auth_exception.custom_exception_handler",
}
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",  # 跨域
    "myapp",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # 跨域中间件
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# 跨域配置
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = "*"

ROOT_URLCONF = "zhiyin_backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "zhiyin_backend.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "zhiyin",
        "USER": "root",
        "PASSWORD": "@xjy158191",
        "HOST": "127.0.0.1",
        "PORT": "3306",
        "OPTIONS": {
            "init_command": "SET foreign_key_checks = 0;",
            "charset": "utf8mb4",  # 建议用 utf8mb4 支持表情符号
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

# 时区
TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_TZ = False  # 不使用时区，直接存储本地时间

# 日期时间格式
DATE_FORMAT = "Y-m-d"
DATETIME_FORMAT = "Y-m-d H:i:s"

MEDIA_ROOT = os.path.join(BASE_DIR, "upload/")  # 上传文件的根目录
MEDIA_URL = "/upload/"  # 访问上传文件的URL前缀
# 图片大小限制
MAX_COVER_SIZE = 2 * 1024 * 1024  # 2MB
# 音频大小限制
MAX_AUDIO_SIZE = 30 * 1024 * 1024  # 30M
# 视频大小限制
MAX_VIDEO_SIZE = 100 * 1024 * 1024  # 100M
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

import datetime

# jwt配置
JWT_SECRET = "django-insecure-_)fbso*slku^exa8#57@+vi#p9-rch1@^+s)o^dx6p&%ofw#d&"  # 可以随机生成一个强秘钥
JWT_ALGORITHM = "HS256"
JWT_EXP_DELTA_SECONDS = 60 * 60 * 2  # token 有效期：2小时
# JWT_EXP_DELTA_SECONDS = 30  # token 有效期：30s


from concurrent_log_handler import ConcurrentRotatingFileHandler

# 确保日志目录存在
LOG_DIR = os.path.join(BASE_DIR, "logs")
os.makedirs(LOG_DIR, exist_ok=True)

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{asctime} | {levelname:8} | {module:15} | {process:5} | {thread:5} | {message}",
            "style": "{",
        },
        "simple": {
            "format": "{asctime} | {levelname:8} | {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "simple",
            "stream": "ext://sys.stdout",
        },
        "django_file": {
            "level": "INFO",
            "class": "concurrent_log_handler.ConcurrentRotatingFileHandler",
            "filename": os.path.join(LOG_DIR, "system.log"),
            "maxBytes": 10 * 1024 * 1024,  # 10MB
            "backupCount": 30,  # 保留30个备份
            "formatter": "verbose",
            "encoding": "utf-8",
            "use_gzip": True,  # 压缩旧日志
        },
        "app_file": {
            "level": "DEBUG",
            "class": "concurrent_log_handler.ConcurrentRotatingFileHandler",
            "filename": os.path.join(LOG_DIR, "app.log"),
            "maxBytes": 10 * 1024 * 1024,  # 10MB
            "backupCount": 30,  # 保留30个备份
            "formatter": "verbose",
            "encoding": "utf-8",
            "use_gzip": True,  # 压缩旧日志
        },
        "error_file": {
            "level": "ERROR",
            "class": "concurrent_log_handler.ConcurrentRotatingFileHandler",
            "filename": os.path.join(LOG_DIR, "error.log"),
            "maxBytes": 10 * 1024 * 1024,  # 10MB
            "backupCount": 30,  # 保留30个备份
            "formatter": "verbose",
            "encoding": "utf-8",
            "use_gzip": True,  # 压缩旧日志
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console", "django_file", "error_file"],
            "level": "INFO",
            "propagate": False,
        },
        "django.request": {
            "handlers": ["console", "django_file", "error_file"],
            "level": "WARNING",
            "propagate": False,
        },
        "django.db.backends": {
            "handlers": ["django_file"],
            "level": "INFO",
            "propagate": False,
        },
        "django.server": {
            "handlers": ["console", "django_file"],
            "level": "INFO",
            "propagate": False,
        },
        "myapp": {
            "handlers": ["console", "app_file", "error_file"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
    "root": {
        "handlers": ["console", "app_file", "error_file"],
        "level": "INFO",
    },
}

# redis配置

REDIS_HOST = "localhost"
REDIS_PASSWORD = "158191xjy"
REDIS_PORT = 6379
REDIS_DB = 0
REDIS_JWT_PREFIX = "jwt_token_"  # Token 键名前缀

# 邮箱配置
# 邮件服务器域名（自行修改）
EMAIL_HOST = "smtp.126.com"
# 邮件服务端口（通常是465）
EMAIL_PORT = 465
# 登录邮件服务器的账号（自行修改）
EMAIL_USER = "xjy158191@126.com"
# 开通SMTP服务的授权码（自行修改）
EMAIL_AUTH = "YSQSpsfcZV563rnY"
